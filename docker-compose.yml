version: '3.8'

services:

  postgres_db:
    image: postgres:16.2
    environment:   # Set up postgres database name and password
      POSTGRES_PASSWORD: password
      POSTGRES_DB: coworking
      POSTGRES_USER: root
    ports:    # Set up ports exposed for other containers to connect to
      - 8432:5432
#    volumes:
#      - ./postgres:/docker-entrypoint-initdb.d    

  application_server:
    build:
      context: "./Application.Server"
      dockerfile: "./Dockerfile"
    depends_on:
      - postgres_db
    command:
      tail -f /dev/null
    environment:   # Set up postgres database name and password
      ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_HTTP_PORTS: "8080"
      DATABASE_CONNECTION_STRING: "Server=postgres_db:5432;Database=coworking;User Id=root;Password=password;TrustServerCertificate=True;"
      GROQ_API_KEY: "keyPlaceHolder"
    ports:    # Set up ports exposed for other containers to connect to
      - 7017:8080
      - 7018:8081
    volumes:
      - ~/.aspnet/https:/https:ro

  application_client:
    depends_on:
      - application_server
    build:
     dockerfile: "./application.client/Dockerfile"
     args:
      API_URL: localhost:7018
    environment:
      API_URL: localhost:7018
    ports:    # Set up ports exposed for other containers to connect to
      - 8080:80